IsObjectSmartFindable: WOConditional {
	condition = d2wContext.isEntitySmartFindable;
}

SmartFindButton: CCSmartAjaxButton {
	action = smartFindAction;
	alt = "Search for object";
	value = d2wContext.findButtonLabel;
	class = d2wContext.baseClassForFindButton;
	useAjax = d2wContext.useAjaxControlsWhenEmbedded;
    updateContainerID = d2wContext.idForParentMainContainer;
}
IsObjectSmartCreatable: WOConditional {
	condition = d2wContext.isEntitySmartCreatable;
}

SmartCreateButton: CCSmartAjaxButton {
	action = smartCreateAction;
	alt = "Create new object";
	value = d2wContext.createButtonLabel;
	class = d2wContext.baseClassForCreateButton;
	useAjax = d2wContext.useAjaxControlsWhenEmbedded;
    updateContainerID = d2wContext.idForParentMainContainer;
}

AttributeDisplay: WOSwitchComponent { 
	WOComponentName = d2wContext.componentName;
	_componentUnroll = true;
	_unroll = true;
	localContext = d2wContext;
	object = d2wContext.object;
}

AttributeRepetition: WORepetition {
	_unroll = true;
	item = propertyKey;
	list = currentSectionKeys;
}

ColumnLabelRepetition: WORepetition {
	_unroll = true;
	item = propertyKey;
	list = currentSectionKeys;
}

ObjectsRepetition: WORepetition {
	item = d2wContext.object;
	list = ^displayGroup.displayedObjects;
	index = rowIndex;
}

LeftAction: WOSwitchComponent { 
	WOComponentName = d2wContext.componentName;
	localContext = d2wContext;
	object = d2wContext.object;
	displayGroup = displayGroup;
	updateContainerID = d2wContext.updateContainerID;
}

LeftActions: WORepetition {
	item = propertyKey;
	list = leftActions;
}

ObjectTableHeaderRow: WOGenericContainer {
	_unroll = true;
	elementName = "tr";
	class = d2wContext.classForObjectTableHeader;
}

ListTableRow: WOGenericContainer {
	elementName = "tr";
	class = objectRowClass;
}

TableHeaderSwitchComponent : WOSwitchComponent {
	WOComponentName = d2wContext.tableHeaderComponentName;
	displayGroup = displayGroup;
	d2wContext = d2wContext;
	updateContainerID = ^updateContainerID;
}

RightAction: WOSwitchComponent { 
	WOComponentName = d2wContext.componentName;
	localContext = d2wContext;
	object = d2wContext.object;
	displayGroup = displayGroup;
}

RightActions: WORepetition {
	item = propertyKey;
	list = rightActions;
}

SectionRepetition: ERXWORepetition {
	list = sectionsContents;
	item = currentSection;
}

PageClass : WOGenericContainer {
	elementName = "div";
	class = d2wContext.pageContainerClass;
}

ObjectTable : WOGenericContainer {
	elementName = "table";
	class = d2wContext.classForObjectTable;
}

AttColumnHeader : WOGenericContainer {
	elementName = "th";
	class = d2wContext.classForAttributeColumn;
}

AttColumnCell : WOGenericContainer {
	elementName = "td";
	class = d2wContext.classForAttributeColumn;
}

HasLeftActionsConditional : WOConditional {
	condition = hasLeftActions;
}

HasRightActionsConditional : WOConditional {
	condition = hasRightActions;
}
D2wContextEntityName : WOString {
  value = d2wContext.entity.name;
}

D2wContextParentPageConfiguration : WOString {
  value = d2wContext.parentPageConfiguration;
}

D2wContextPageConfiguration : WOString {
  value = d2wContext.pageConfiguration;
}

D2wContextParentProperytKey : WOString {
  value = d2wContext.parentProperytKey;
}
