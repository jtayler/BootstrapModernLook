CancelButton: CCSmartAjaxButton {
	alt = "Reverts your changes";
	value = d2wContext.cancelButtonLabel;
	action = cancelAction;
	dontSubmitForm = true;
	class = "btn btn-light btn-pill";
	useAjax = d2wContext.useAjaxControlsWhenEmbedded;
	updateContainerID = d2wContext.idForParentMainContainer;
}

SecondaryActionBlock: ERMODSecondaryActionButtons {
	d2wContext = d2wContext;
	object = object;
}

EditButton: CCSmartAjaxButton {
	action = editAction;
	alt = "Edits this object";
	value = d2wContext.editButtonLabel;
	class = "btn btn-success btn-pill";
	useAjax = d2wContext.useAjaxControlsWhenEmbedded;
    updateContainerID = d2wContext.idForParentMainContainer;
}

RequiredWrapper : ERMODRequiredWrapper {
	d2wContext = d2wContext;
}

InspectPageRepetition: WOSwitchComponent {
	WOComponentName = d2wContext.repetitionComponentName;
	d2wContext = d2wContext;
	object = object;
}

IsEditingConditional: WOConditional {
	_unroll = true;
	condition = isEditing;
}

IsNotEditingConditional: WOConditional {
	_unroll = true;
	condition = isEditing;
	negate = true;
}

IsObjectEditable: WOConditional {
	condition = isObjectEditable;
}

PageWrapper: WOSwitchComponent {
	WOComponentName = d2wContext.pageWrapperName;
	_componentUnroll = true;
	_unroll = true;
}

ReturnButton: CCSmartAjaxButton {
	alt = "Returns to the previous page";
	action = nextPage;
	value = d2wContext.returnButtonLabel;
	class = "btn btn-light btn-pill";
	useAjax = d2wContext.useAjaxControlsWhenEmbedded;
    updateContainerID = d2wContext.idForParentMainContainer;
}

ShowCancel: WOConditional {
	condition = showCancel;
}

SubmitChanges: CCSmartAjaxButton {
	action = submitAction;
	alt = "Saves your changes";
	value = d2wContext.saveButtonLabel;
	class = "btn btn-success btn-pill";
	useAjax = d2wContext.useAjaxControlsWhenEmbedded;
    updateContainerID = d2wContext.idForParentMainContainer;
}

TopActionBlock : WOGenericContainer {
	elementName = "div";
	class = d2wContext.classForTopActionBlock;
}

BottomActionBlock : WOGenericContainer {
	elementName = "div";
	class = d2wContext.classForBottomActionBlock;
}

ShowBottomActionBlock : WOConditional {
	condition = d2wContext.showBottomActionBlock;
}

ShowTopActionBlock : WOConditional {
	condition = d2wContext.showTopActionBlock;
}

ErrorBlock : ERMODErrorBlock {
  d2wContext = d2wContext;
  errorMessage = errorMessage;
  errorMessages = errorMessages;
}

InnerWrapper : WOGenericContainer {
	elementName = "div";
	class = d2wContext.classForInnerWrapper;
}

ShouldShowDefaultPageButtons : WOConditional {
	condition = d2wContext.shouldShowDefaultPageButtons;
}